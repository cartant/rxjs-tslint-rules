import { Observable, of, Subject } from "rxjs";

class EventEmitter<T> extends Subject<T> {}

class Something {
    public somethingChanged: EventEmitter<any>;
    public canActivate(): Observable<any> { return of(); }
    public canActivateChild(): Observable<any> { return of(); }
    public canDeactivate(): Observable<any> { return of(); }
    public canLoad(): Observable<any> { return of(); }
    public intercept(): Observable<any> { return of(); }
    public resolve(): Observable<any> { return of(); }
    public validate(): Observable<any> { return of(); }
}

[finnish]: Finnish notation required for %s
